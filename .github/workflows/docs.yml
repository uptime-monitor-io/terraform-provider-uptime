name: Documentation

on:
  push:
    branches: [ main ]
    paths:
      - 'docs/**'
      - 'examples/**'
      - 'internal/**'
      - 'README.md'
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    name: Build Documentation
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21'
          cache: true
      
      - name: Install tfplugindocs
        run: go install github.com/hashicorp/terraform-plugin-docs/cmd/tfplugindocs@latest
      
      - name: Generate provider documentation
        run: tfplugindocs generate --rendered-provider-name="Uptime Monitor"
      
      - name: Setup Ruby for Jekyll
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.1'
          bundler-cache: true
      
      - name: Create Jekyll site structure
        run: |
          cat > _config.yml << EOF
          title: Uptime Monitor Terraform Provider
          description: Terraform provider for managing Uptime Monitor resources
          theme: jekyll-theme-cayman
          plugins:
            - jekyll-relative-links
            - jekyll-sitemap
            - jekyll-seo-tag
          
          relative_links:
            enabled: true
            collections: true
          
          include:
            - README.md
            - docs
            - examples
          EOF
          
          cat > Gemfile << EOF
          source "https://rubygems.org"
          
          gem "github-pages", group: :jekyll_plugins
          gem "jekyll-relative-links"
          gem "jekyll-sitemap"
          gem "jekyll-seo-tag"
          EOF
          
          bundle install
      
      - name: Build Jekyll site
        run: bundle exec jekyll build
      
      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./_site

  deploy:
    name: Deploy Documentation
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4